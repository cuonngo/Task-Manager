/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.sql.*;
/**
 *
 * @author Boss
 */
public class Task extends javax.swing.JFrame {
    private Connection con;
    private String username;
    
    public Task() {
        initComponents();
        Model_A = new DefaultListModel();
        Model_B = new DefaultListModel();
        Model_C = new DefaultListModel();
    }
    
    public void setConnection(Connection con, String username){
        this.con = con;
        this.username = username;
        load(Model_A, "TODO");
        load(Model_B, "INPROGRESS");
        load(Model_C, "DONE");
        list_toDo.setModel(Model_A);
        list_inProgress.setModel(Model_B);
        list_done.setModel(Model_C);
    }
    DefaultListModel Model_A;
    DefaultListModel Model_B;
    DefaultListModel Model_C;

    private void load(DefaultListModel model, String taskType)
    {
        String sql = "select * from "+username;
        try{
            PreparedStatement st = con.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            while(rs.next()){
                String task = rs.getString(taskType);
                if(task != null){
                    model.addElement(rs.getString(taskType));
                }
            }
        }catch(Exception e){
            System.out.println("cannot load");
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        list_toDo = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        list_inProgress = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        list_done = new javax.swing.JList();
        txt_task = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_toDoR = new javax.swing.JButton();
        btn_InProgressL = new javax.swing.JButton();
        btn_toDoUp = new javax.swing.JButton();
        btn_down = new javax.swing.JButton();
        btn_R2 = new javax.swing.JButton();
        btn_L2 = new javax.swing.JButton();
        btn_up2 = new javax.swing.JButton();
        btn_down2 = new javax.swing.JButton();
        btn_toDoRemove = new javax.swing.JButton();
        btn_inProgressRemove = new javax.swing.JButton();
        btn_doneRemove = new javax.swing.JButton();
        cmb = new javax.swing.JComboBox();
        btn_up3 = new javax.swing.JButton();
        btn_down3 = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_save1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setViewportView(list_toDo);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 33, 289, 388));

        jScrollPane3.setViewportView(list_inProgress);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 33, 291, 388));

        jScrollPane4.setViewportView(list_done);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 33, 289, 388));

        txt_task.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt_task, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 463, 841, -1));

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        getContentPane().add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 460, 59, -1));

        jLabel1.setText("To Do");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 11, -1, -1));

        jLabel2.setText("In Progress");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(478, 11, -1, -1));

        jLabel3.setText("Done");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 10, -1, -1));

        btn_toDoR.setText(">>");
        btn_toDoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_toDoRActionPerformed(evt);
            }
        });
        getContentPane().add(btn_toDoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 134, 59, -1));

        btn_InProgressL.setText("<<");
        btn_InProgressL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InProgressLActionPerformed(evt);
            }
        });
        getContentPane().add(btn_InProgressL, new org.netbeans.lib.awtextra.AbsoluteConstraints(316, 169, 59, -1));

        btn_toDoUp.setText("up");
        btn_toDoUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_toDoUpActionPerformed(evt);
            }
        });
        getContentPane().add(btn_toDoUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 427, 82, -1));

        btn_down.setText("down");
        btn_down.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_downActionPerformed(evt);
            }
        });
        getContentPane().add(btn_down, new org.netbeans.lib.awtextra.AbsoluteConstraints(232, 427, -1, -1));

        btn_R2.setText(">>");
        btn_R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_R2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_R2, new org.netbeans.lib.awtextra.AbsoluteConstraints(678, 132, 59, -1));

        btn_L2.setText("<<");
        btn_L2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_L2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_L2, new org.netbeans.lib.awtextra.AbsoluteConstraints(678, 167, 59, -1));

        btn_up2.setText("up");
        btn_up2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_up2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_up2, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 427, -1, -1));

        btn_down2.setText("down");
        btn_down2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_down2ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_down2, new org.netbeans.lib.awtextra.AbsoluteConstraints(594, 427, -1, -1));

        btn_toDoRemove.setText("Remove");
        btn_toDoRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_toDoRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_toDoRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 427, 82, -1));

        btn_inProgressRemove.setText("Remove");
        btn_inProgressRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inProgressRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_inProgressRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 427, 82, -1));

        btn_doneRemove.setText("Remove");
        btn_doneRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doneRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_doneRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 430, 82, -1));

        cmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "To Do", "In Progress", "Done" }));
        cmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActionPerformed(evt);
            }
        });
        getContentPane().add(cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 465, 98, -1));

        btn_up3.setText("up");
        btn_up3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_up3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_up3, new org.netbeans.lib.awtextra.AbsoluteConstraints(743, 427, -1, -1));

        btn_down3.setText("down");
        btn_down3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_down3ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_down3, new org.netbeans.lib.awtextra.AbsoluteConstraints(957, 427, -1, -1));

        btn_save.setText("X");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 0, 60, -1));

        btn_save1.setText("Save");
        btn_save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void swapElement(int pos1, int pos2, DefaultListModel model){
        Object a = model.getElementAt(pos1);
        Object b = model.getElementAt(pos2);
        model.set(pos1, b);
        model.set(pos2, a);
    }
    
    private void btn_toDoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_toDoRActionPerformed
        try{
            Object aObject = Model_A.getElementAt(list_toDo.getSelectedIndex());
            System.out.println(aObject.toString());
            Model_B.addElement(aObject);
            list_inProgress.setModel(Model_B);
            int indexOfSelected = list_toDo.getSelectedIndex();
            Model_A.remove(indexOfSelected);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_toDoRActionPerformed

    private void btn_InProgressLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InProgressLActionPerformed
        try{
            int indexOfSelected = list_inProgress.getSelectedIndex();
            Object aObject = Model_B.getElementAt(indexOfSelected);
            Model_A.addElement(aObject);
            list_toDo.setModel(Model_A);
            Model_B.remove(indexOfSelected);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_InProgressLActionPerformed

    private void btn_toDoUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_toDoUpActionPerformed
        int indexOfSelected = list_toDo.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected - 1, Model_A);
            list_toDo.setSelectedIndex(indexOfSelected - 1);
            list_toDo.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_toDoUpActionPerformed

    private void btn_downActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_downActionPerformed
        int indexOfSelected = list_toDo.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected + 1, Model_A);
            list_toDo.setSelectedIndex(indexOfSelected + 1);
            list_toDo.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_downActionPerformed

    private void btn_R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_R2ActionPerformed
        try{
            Object aObject = Model_B.getElementAt(list_inProgress.getSelectedIndex());
            Model_C.addElement(aObject);
            list_done.setModel(Model_C);
            int indexOfSelected = list_inProgress.getSelectedIndex();
            Model_B.remove(indexOfSelected);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_R2ActionPerformed

    private void btn_L2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_L2ActionPerformed
        try{
            int indexOfSelected = list_done.getSelectedIndex();
            Object aObject = Model_C.getElementAt(indexOfSelected);
            Model_B.addElement(aObject);
            list_inProgress.setModel(Model_B);
            Model_C.remove(indexOfSelected);
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_L2ActionPerformed

    private void btn_up2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_up2ActionPerformed
        int indexOfSelected = list_inProgress.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected - 1, Model_B);
            list_inProgress.setSelectedIndex(indexOfSelected - 1);
            list_inProgress.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_up2ActionPerformed

    private void btn_down2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_down2ActionPerformed
        int indexOfSelected = list_inProgress.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected + 1, Model_B);
            list_inProgress.setSelectedIndex(indexOfSelected + 1);
            list_inProgress.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_down2ActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if(txt_task.getText().isEmpty())
            JOptionPane.showMessageDialog(null, "Task is empty!");
        else{
            int choice = cmb.getSelectedIndex();
            
            switch(choice){
                case 0: Model_A.addElement(txt_task.getText());
                        list_toDo.setModel(Model_A);
                        break;
                case 1: Model_B.addElement(txt_task.getText());
                        list_inProgress.setModel(Model_B);
                        break;
                case 2: Model_C.addElement(txt_task.getText());
                        list_done.setModel(Model_C);
                        break;
            }
            txt_task.setText("");
                
        }
        
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_up3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_up3ActionPerformed
        int indexOfSelected = list_done.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected - 1, Model_C);
            list_done.setSelectedIndex(indexOfSelected - 1);
            list_done.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_up3ActionPerformed

    private void btn_down3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_down3ActionPerformed
        int indexOfSelected = list_done.getSelectedIndex();
        try{
            swapElement(indexOfSelected, indexOfSelected + 1, Model_C);
            list_done.setSelectedIndex(indexOfSelected + 1);
            list_done.updateUI();
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_btn_down3ActionPerformed

    private void btn_toDoRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_toDoRemoveActionPerformed
        int indexOfSelected = list_toDo.getSelectedIndex();
        remove(Model_A, indexOfSelected);
    }//GEN-LAST:event_btn_toDoRemoveActionPerformed

    private void btn_inProgressRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inProgressRemoveActionPerformed
        int indexOfSelected = list_inProgress.getSelectedIndex();
        remove(Model_B, indexOfSelected);
    }//GEN-LAST:event_btn_inProgressRemoveActionPerformed

    private void btn_doneRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doneRemoveActionPerformed
        int indexOfSelected = list_done.getSelectedIndex();
        remove(Model_C, indexOfSelected);
    }//GEN-LAST:event_btn_doneRemoveActionPerformed

    private void cmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save1ActionPerformed
        remove_All();
        save_task(Model_A, "TODO");
        save_task(Model_B, "INPROGRESS");
        save_task(Model_C, "DONE");
    }//GEN-LAST:event_btn_save1ActionPerformed
    
    private void display(DefaultListModel model){
            System.out.println(model);
    }
    
    private void remove_All(){
        String sql = "TRUNCATE "+username;
        try{
            Statement ps = con.createStatement();
            ps.executeUpdate(sql);
            sql = "DELETE FROM " +username;
            ps.executeUpdate(sql);
        }catch(SQLException e){
            System.out.println("Cannot delete");
        }
    }
    
    private void save_task(DefaultListModel model, String taskType){
        for(int i = 0; i < model.getSize(); ++i){
            String task = model.getElementAt(i).toString();
            String sql = "INSERT INTO "+username+"("+taskType+") VALUES ('"+task+"')";
            try{
                PreparedStatement ps = con.prepareStatement(sql);
                ps.executeUpdate();
            }catch(SQLException e){
                System.out.println(e);
            }
        }
    }
    
    private void remove(DefaultListModel model, int index){
        if(index != -1)
            model.remove(index);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Task.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Task().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_InProgressL;
    private javax.swing.JButton btn_L2;
    private javax.swing.JButton btn_R2;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_doneRemove;
    private javax.swing.JButton btn_down;
    private javax.swing.JButton btn_down2;
    private javax.swing.JButton btn_down3;
    private javax.swing.JButton btn_inProgressRemove;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_save1;
    private javax.swing.JButton btn_toDoR;
    private javax.swing.JButton btn_toDoRemove;
    private javax.swing.JButton btn_toDoUp;
    private javax.swing.JButton btn_up2;
    private javax.swing.JButton btn_up3;
    private javax.swing.JComboBox cmb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList list_done;
    private javax.swing.JList list_inProgress;
    private javax.swing.JList list_toDo;
    private javax.swing.JTextField txt_task;
    // End of variables declaration//GEN-END:variables
}
